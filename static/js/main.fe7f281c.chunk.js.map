{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/ContactList.js","components/layout/FormInputGroup.js","components/contacts/AddContactForm.js","components/contacts/EditContactForm.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","_ref","type","payload","Object","objectSpread","contacts","filter","_ref2","id","concat","toConsumableArray","_ref3","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","action","setState","inherits","createClass","key","value","_this2","axios","get","then","_ref4","data","react_default","a","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","res","_this$props$contact","contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","ContactList","Fragment","map","contacts_Contact","FormInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContactForm","errors","_ref$target","target","defineProperty","onSubmit","e","preventDefault","_this$state","post","history","push","_this$state2","layout_FormInputGroup","EditContactForm","match","params","put","_this3","Header","branding","href","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe7f281c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext(),\n    reducer = (state, { type, payload }) => {\n        switch(type) {\n            case 'DELETE_CONTACT':\n                return {\n                    ...state,\n                    contacts: state.contacts.filter(({ id }) => id !== payload)\n                };\n            case 'ADD_CONTACT':\n                return {\n                    ...state,\n                    contacts: [ payload, ...state.contacts ]\n                };\n            case 'UPDATE_CONTACT':\n                return {\n                    ...state,\n                    contacts: [ payload, ...state.contacts.filter(({ id }) => id !== payload.id) ]\n                };\n            default:\n                return state;\n        }\n    }\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => \n        this.setState(state =>\n        reducer(state, action))\n    };\n\n    componentDidMount() {\n        axios.get('https://jsonplaceholder.typicode.com/users')\n            .then(({ data }) => this.setState({ contacts: data }));\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick = (id, dispatch) => {\n        axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n            .then(res => dispatch({ type: 'DELETE_CONTACT', payload: id }));\n    };\n\n    render() {\n        const { id, name, email, phone } = this.props.contact,\n        { showContactInfo } = this.state;\n\n        return(\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>{name}{' '}\n                                <i onClick={() => {\n                                    this.setState({ showContactInfo: !this.state.showContactInfo })\n                                    }} className=\"fas fa-sort-down\"\n                                    style={{ cursor: 'pointer' }}\n                                />\n                                <i className=\"fas fa-times\"\n                                    style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                                />\n                                <Link to={`/contact/edit/${id}`}>\n                                    <i className=\"fas fa-pencil-alt\"\n                                        style={{ cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem' }}\n                                    />\n                                </Link>\n                            </h4>\n                            {showContactInfo ? (\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item text-lowercase\">Email: {email}</li>\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\n                                </ul>\n                            ) : null}\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context'\n\n\nclass ContactList extends Component {\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className=\"text-danger\">Contact</span> List\n                            </h1>\n                            {contacts.map(contact => (\n                                <Contact\n                                    key={contact.id}\n                                    contact={contact}\n                                />\n                            ))}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default ContactList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst FormInputGroup = ({ label, name, type, placeholder, value, onChange, error }) => {\n    return(\n        <div className=\"form-group\">\n            <label htmlFor=\"name\">{label}</label>\n            <input type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', { 'is-invalid': error })}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n            />\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    )\n}\n\nFormInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n};\n\nFormInputGroup.defaultProps = { type: 'text' };\n\nexport default FormInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport FormInputGroup from '../layout/FormInputGroup';\nimport axios from 'axios';\n\nclass AddContactForm extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    onChange = ({ target: { name, value } }) => this.setState({ [name]: value });\n    onSubmit = (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n        if(!name) return this.setState({ errors: { name: 'Name is required!' } });\n        if(!email) return this.setState({ errors: { email: 'Email is required!' } });\n        if(!phone) return this.setState({ errors: { phone: 'Phone number is required!' } });\n        axios.post('https://jsonplaceholder.typicode.com/users/', { name, email, phone })\n        .then(({ data }) => dispatch({ type: 'ADD_CONTACT', payload: data}));\n        this.setState({ name: '', email: '', phone: '', errors: {} });\n        this.props.history.push('/')  ;\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        return (\n           <Consumer>\n               {value=> {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Add Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <FormInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"enter name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <FormInputGroup \n                                        type=\"email\"\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        placeholder=\"enter email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <FormInputGroup \n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"enter phone number\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input type=\"submit\" value=\"Add Contact\"\n                                        className=\"btn btn-block btn-light\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default AddContactForm;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport FormInputGroup from '../layout/FormInputGroup';\nimport axios from 'axios';\n\nclass EditContactForm extends Component {\n    state = {\n        id: this.props.match.params.id,\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    componentDidMount() {\n        axios.get(`https://jsonplaceholder.typicode.com/users/${this.state.id}`).then(({ data }) => this.setState(data));\n    }\n\n    onChange = ({ target: { name, value } }) => this.setState({ [name]: value });\n    onSubmit = (dispatch, e) => {\n        e.preventDefault();\n        const { id, name, email, phone } = this.state;\n        if(!name) return this.setState({ errors: { name: 'Name is required!' } });\n        if(!email) return this.setState({ errors: { email: 'Email is required!' } });\n        if(!phone) return this.setState({ errors: { phone: 'Phone number is required!' } });\n        axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, { name, email, phone })\n        .then(({ data }) => dispatch({ type: 'UPDATE_CONTACT', payload: data}));\n        this.setState({ name: '', email: '', phone: '', errors: {} });\n        this.props.history.push('/')  ;\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        return (\n           <Consumer>\n               {value=> {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Edit Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <FormInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"enter name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <FormInputGroup \n                                        type=\"email\"\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        placeholder=\"enter email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <FormInputGroup \n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"enter phone number\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input type=\"submit\" value=\"Update Contact\"\n                                        className=\"btn btn-block btn-light\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default EditContactForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n const Header = ({ branding }) => {\n    return(\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\nexport default Header;","import React from 'react'\n\nexport default function About() {\n  return (\n    <React.Fragment>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">A simple app to manage your contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">The page you requested does not exist</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from './context';\nimport ContactList from './components/contacts/ContactList';\nimport AddContactForm from './components/contacts/AddContactForm';\nimport EditContactForm from './components/contacts/EditContactForm';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className=\"App\">\n                        <Header branding=\"Contact Manager\" />\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={ContactList} />\n                                <Route exact path=\"/contact/add\" component={AddContactForm} />\n                                <Route exact path=\"/contact/edit/:id\" component={EditContactForm} />\n                                <Route exact path=\"/about\" component={About} />\n                                <Route component={NotFound} />\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n    ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}